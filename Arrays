/*
taking input from ArrayList 
*/

import java.util.*;
public class kd{
    public static void main(String args[]){
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        
        ArrayList<Integer> list = new ArrayList<>(n);
        
        for(int i=0; i<n; i++){
            list.add(in.nextInt());
        }
        System.out.print(list + " ");
    }
}
input:
3
1 3 4
output:
[1, 3, 4]




/*
check if given string is angram or not(interview que.)
*/

import java.util.*;
public class jdf{
    public static void main(String args[]){
      //  Scanner fre = new Scanner(System.in);
        int[] arr = new int[26];
        
        String str = "dad";
        String str1 = "min";
        
        for(int i=0; i<str.length(); i++){
            char c = str.charAt(i);
            int index = (int)(c - 'a');
            arr[index]++;
        }
        
        for(int i=0; i<str1.length(); i++){
            char c = str1.charAt(i);
            int index = (int)(c - 'a');
            arr[index]--;
        }
        boolean ana = true;
        for(int i=0; i<arr.length; i++){
            if(arr[i] != 0){
                ana = false;
            }
        }
        if(ana == true){
            System.out.print("YES");
        }else {
            System.out.print("NO");
        }
     
    }
}
input : "dfjk" "dfjk"
output:
YES





/* 
print the freqency of each elements in the following array (interview que.)
*/

import java.util.*;
public class Main{
    public static void main(String args[]){
    int[] arr = {1,2,2,2,3,3,5,5,10,10,19,19,19,20};
    int[] arr1 = new int[50];
    
    for(int i=0; i<arr.length; i++){
        arr1[arr[i]]++;
      }
   for(int i=0; i<arr1.length; i++){
        if(arr1[i] > 0){
        System.out.println(i + " " + arr1[i]);
     }
   }
 }
}
input : 1, 2, 2, 2, 3, 3, 5, 20,20, 20
output: 
1 1
2 3
3 2
5 1
20 3





/*
Given a binary array of size N. Count number of 1's and 0's in the array.(interview que.)                                  
*/

import java.util.*;
public class dkd{
    public static void main(String args[]){
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int[] arr = new int[n];
        for(int i=0; i<n; i++){
            arr[i] = in.nextInt();
        }
        int countOfOne = 0;
        for(int i=0; i<arr.length; i++){
            if(arr[i] == 1){
                countOfOne++;
            }
        }
        int cntZ = 0;
        for(int i=0; i<arr.length; i++){
            if(arr[i] == 0){
                cntZ++;
            }
        }
        System.out.print(countOfOne + " " + cntZ);
    }
}
Input:
5
0 1 1 0 1

Output:
3 2 




/*
Question: Median of an array(interview que.)
        Input: [7 ,5, 1, 8, 3, 6, 0, 9, 4,2]
        Output: 4.5
        explanation: after sorting take numers which are in the middle...
*/

import java.util.*;
public class dk{
    public static void main(String args[]){
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int[] arr = new int[n];
        for(int i=0; i<n; i++){
            arr[i] = in.nextInt();
        }
     double ans = meadia(arr);
        System.out.print(ans);
    }
    public static double meadia(int[] arr){
        Arrays.sort(arr);
        if(arr.length % 2 == 0){
            int mid = arr.length/2;
            int mid1 = (arr.length/2) - 1;
            
            return (arr[mid1] + arr[mid]) / 2.0;
        }else {
            return arr[arr.length/2];
        }
        
    }
}
Input: [7 ,5, 1, 8, 3, 6, 0, 9, 4,2]
Output: 4.5



/*
35. Search Insert Position
Easy
Given a sorted array of distinct integers and a target value, return the index if the target is found. If not, return the index where it would be if it were inserted in order.
You must write an algorithm with O(log n) runtime complexity.
Example 1:
Input: nums = [1,3,5,6], target = 5
Output: 2                            
*/ 

import java.util.*;
public class dk{
    public static void main(String args[]){
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int target = in.nextInt();
        int[] arr = new int[n];
        for(int i=0; i<n; i++){
            arr[i] = in.nextInt();
        }
        int ans = binarySear(arr, target);
        System.out.print(ans);
    }
    public static int binarySear(int[] arr, int target){
        int left = 0;
        int right = arr.length - 1;
        
        while(left < right){
            
            int mid = left + (right - left)/2;
            
            if(arr[mid] == target){
                return mid;
            }else if(arr[mid] < target){
               left = mid + 1;
            }else {
                right = mid - 1;
            }
        }
        return right;
    }
}
Input: nums = [1,3,5,6], target = 5
Output: 2




/*
find the maximum repated char in given array of String(Interview Que.)
*/

import java.util.*;
public class kd{
    public static void main(String args[]){
        Scanner in = new Scanner(System.in);
        String str = "aabbbdefh";
        int[] arr = new int[256];
        for(int i=0; i<str.length(); i++){
            arr[str.charAt(i)]++;
        }
        int max = 0;
        char ans = ' ';
        
        for(int i=0; i<str.length(); i++){
            if(max < arr[str.charAt(i)]){
                max = arr[str.charAt(i)];
                ans = str.charAt(i);
            }
        }
        System.out.print(ans);
    }
}
input :- "aabbbdefh"
ouput :- b
